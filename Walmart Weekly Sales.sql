--Warmart weekly sales dataset--
/*
	Dataset contains the store number, week of sales, total sales for the given store and date, whether the week is a special holiday week or not, 
	avagare temperature in the region during the week, the cost of fuel in the region during the week, the consumer price index in the region and 
	the unemployment rate in the region.
	We would like the following questions answered:
		.What was the total revenue generated by the retailer during the time period covered by the dataset?
		.How was the weather during the quarter with the highest sales?
		.Conclude whether the weather has an essential impact on sales.
		.Do the sales always rise near the holiday season for all the years?
*/

--Let's get to know our data first--
select * from [walmart-wsales];

--# of Stores: 45
select count(distinct Store) as Total_Stores from [walmart-wsales];

--Range of captured weekly sales: Feb-2010 to Oct-2012
select min(Date) as Date_From, max(Date) as Date_To from [walmart-wsales];

--# of Total Holidays sales captured per store: 10 | All stores have the same period of sales captured
select Store, count(Holiday_Flag) from [walmart-wsales]
where Holiday_Flag = 1
group by Store;
	--We can brake down by year and capture total of holiday sales captured each year:
	select DATEPART(year, Date) as Year_of_Sales, count(distinct Date) as Total_Holidays from [walmart-wsales]
	where Holiday_Flag=1
	group by DATEPART(year, Date);

--Average sales per store:
select Store, CONCAT('$', ROUND(Avg(Weekly_Sales)/1000000, 3), 'M') as Total_Avg_Sales from [walmart-wsales]
group by Store
order by Store;

--Total sales per store/year
select Store, DATEPART(year, Date) as Sales_Year, SUM(Weekly_Sales) as Total_Year_Sales from [walmart-wsales]
group by Store, DATEPART(year, Date)
order by Store, DATEPART(year, Date);
		
--Stores that had the highest sales per year:
with TopSales as (
	select Store, DATEPART(year, Date) as Sales_Year, SUM(Weekly_Sales) as Total_Year_Sales,
		ROW_NUMBER() over (PARTITION BY DATEPART(year, Date) order by sum(Weekly_Sales) DESC) as rank
	from [walmart-wsales]
	group by Store, DATEPART(year, Date)
)
select Sales_Year, Store, Total_Year_Sales 
from TopSales
where rank = 1;

--Questions--
--What was the total revenue generated by the retailer during the time period covered by the dataset?
select Store, CONCAT('$', ROUND(SUM(Weekly_Sales)/1000000, 3), 'M') as Total_Sales from [walmart-wsales]
group by Store
order by Store;

--How was the weather during the quarter with the highest sales?
--Q1: Jan,Feb, Mar | Q2: Apr,May,Jun | Q3: Jul,Aug,Sep | Q4: Oct,Nov,Dec
--Avg temperature and total of sales for each quarter registered
select ROUND(AVG(Temperature), 2) as Avg_Temp, DATEPART(quarter, Date) as Sales_Quarter, 
		DATEPART(year, Date) as Sales_Year, CONCAT('$', ROUND(SUM(Weekly_Sales)/1000000, 3), 'M') as Total_Quarter_Sales
from [walmart-wsales]
group by DATEPART(year, Date), DATEPART(quarter, Date)
order by DATEPART(year, Date), DATEPART(quarter, Date);

--To get the average temperature for the quarter with max sales
with QuaterlySales as(
	select DATEPART(quarter, Date) as Sales_Quarter, DATEPART(year, Date) as Sales_Year, 
		SUM(Weekly_Sales) as Total_Quarter_Sales
	from [walmart-wsales]
	group by DATEPART(year, Date), DATEPART(quarter, Date)
),
QuaterlyTemp as(
	select DATEPART(quarter, Date) as Sales_Quarter, DATEPART(year, Date) as Sales_Year, 
		ROUND(AVG(Temperature), 2) as Avg_Temp
	from [walmart-wsales]
	group by DATEPART(year, Date), DATEPART(quarter, Date)
),
MaxQuarterlySales as(
	select Sales_Year, 
		MAX(Total_Quarter_Sales) as MaxTotalQuarterSales
	from QuaterlySales
	group by Sales_Year
)
select TOP 1
	QuaterlySales.Sales_Year, QuaterlySales.Sales_Quarter, CONCAT('$', ROUND(QuaterlySales.Total_Quarter_Sales/1000000, 3), 'M') as Total_Quarter_Sales, 
	QuaterlyTemp.Avg_Temp
from QuaterlySales 
join QuaterlyTemp on QuaterlySales.Sales_Year = QuaterlyTemp.Sales_Year 
					AND QuaterlySales.Sales_Quarter = QuaterlyTemp.Sales_Quarter
join MaxQuarterlySales on QuaterlySales.Sales_Year = QuaterlyTemp.Sales_Year 
					AND QuaterlySales.Total_Quarter_Sales = MaxQuarterlySales.MaxTotalQuarterSales
order by Total_Quarter_Sales DESC;

--Do the sales always rise near the holiday season for all the years?
--Lets check all the holidays: Feb - Valentines day/September - Labour day/November - Thanksgiving/December - Christmas
select distinct(Date) from [walmart-wsales]
where Holiday_Flag=1;

--Does the weather have an impact on sales?
--avg of sales when its hot>29/14>pleasant<=29/cold<=14 and for the year overall
Select CONCAT('$', ROUND(Avg(Weekly_Sales)/1000000, 3), 'M') as Total_Avg_Sales, sub.Temperature_Feel
From(
	select Weekly_Sales, Temperature,
	case
		when Temperature > 83 then 'Hot'
		when Temperature <= 56 then 'Cold'
		else 'Pleasant'
	end as Temperature_Feel
	from [walmart-wsales]
	)sub
group by sub.Temperature_Feel;
	
--For each year, we can check the avg sales before holidays and how much it went up/down during a holiday season
--We do not have enough information for 2012, we'll calculate 2010/2011 only.
--So let's check the average of sales before a holiday season and during:
select CONCAT('$', ROUND(AVG(Weekly_Sales)/1000000, 3), 'M') as Normal_Sales from [walmart-wsales]
where Holiday_Flag = 0 AND (DATEPART(year, Date) = 2010 OR DATEPART(year, Date) = 2011)
group by DATEPART(year, Date);

select CONCAT('$', ROUND(AVG(Weekly_Sales)/1000000, 3), 'M') as Normal_Sales from [walmart-wsales]
where Holiday_Flag = 1 AND (DATEPART(year, Date) = 2010 OR DATEPART(year, Date) = 2011)
group by DATEPART(year, Date);

-- Joining on the same table to check if there is growth in sales:
with HolidaySales as(
	select DATEPART(year, Date) as Sales_Year, AVG(Weekly_Sales) as Holiday_Sales from [walmart-wsales]
	where Holiday_Flag = 1 AND (DATEPART(year, Date) = 2010 OR DATEPART(year, Date) = 2011)
	group by DATEPART(year, Date)
),
NormalSales as(
	select DATEPART(year, Date) as Sales_Year, AVG(Weekly_Sales) as Normal_Sales from [walmart-wsales]
	where Holiday_Flag = 0 AND (DATEPART(year, Date) = 2010 OR DATEPART(year, Date) = 2011)
	group by DATEPART(year, Date)
)
select HolidaySales.Sales_Year, 
	CONCAT('$', ROUND(NormalSales.Normal_Sales/1000000, 3), 'M') as Normal_Sales, CONCAT('$', ROUND(HolidaySales.Holiday_Sales/1000000, 3), 'M') as Holiday_Sales,
	CONCAT(ROUND((HolidaySales.Holiday_Sales - NormalSales.Normal_Sales)/(HolidaySales.Holiday_Sales), 3), '%') as Seasonal_Difference
	from HolidaySales
join NormalSales on HolidaySales.Sales_Year = NormalSales.Sales_Year;



